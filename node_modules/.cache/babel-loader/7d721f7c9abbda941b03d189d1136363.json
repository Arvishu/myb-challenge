{"ast":null,"code":"import _classCallCheck from \"/home/hugo/Bureau/myb-challenge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hugo/Bureau/myb-challenge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hugo/Bureau/myb-challenge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hugo/Bureau/myb-challenge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hugo/Bureau/myb-challenge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hugo/Bureau/myb-challenge/src/components/UpComingEventsTab/UpComingEventsTab.js\";\nimport React, { Component } from 'react';\nimport Fetch from '../Fetch/Fetch';\nimport './UpComingEventsTab.css';\nimport moment from 'moment';\n\nvar UpComingEventsTab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpComingEventsTab, _Component);\n\n  function UpComingEventsTab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpComingEventsTab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpComingEventsTab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      events: []\n    };\n    return _this;\n  }\n\n  _createClass(UpComingEventsTab, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Fetch(\"/players/id/lastEvents\").then(function (data) {\n        return _this2.setState({\n          events: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"tabTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Upcoming Events\"), React.createElement(\"div\", {\n        className: \"eventsTab \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, events.map(function (event, index) {\n        var hour = moment(event.date).format('H:HH');\n        var dateFormated = moment(event.date).format('dddd D MMMM');\n        var diffMonth = moment(new Date(event.date)).diff(moment(), 'months', true).toFixed();\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"in 3 months\"), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"SQUASH\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Tuesday 29 January \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }), \"at 20:09\"), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"11 participants\"));\n      })));\n    }\n  }]);\n\n  return UpComingEventsTab;\n}(Component);\n\nexport { UpComingEventsTab as default };","map":{"version":3,"sources":["/home/hugo/Bureau/myb-challenge/src/components/UpComingEventsTab/UpComingEventsTab.js"],"names":["React","Component","Fetch","moment","UpComingEventsTab","state","events","then","data","setState","map","event","index","hour","date","format","dateFormated","diffMonth","Date","diff","toFixed"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IAEqBC,iB;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,MAAM,EAAC;AADD,K;;;;;;wCAIa;AAAA;;AACnBJ,MAAAA,KAAK,CAAC,wBAAD,CAAL,CAAgCK,IAAhC,CAAqC,UAAAC,IAAI;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAACH,UAAAA,MAAM,EAACE;AAAR,SAAd,CAAJ;AAAA,OAAzC;AAEH;;;6BAEU;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAIM;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCF,MAAM,CAACI,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACxB,YAAIC,IAAI,GAAGV,MAAM,CAACQ,KAAK,CAACG,IAAP,CAAN,CAAmBC,MAAnB,CAA0B,MAA1B,CAAX;AACA,YAAIC,YAAY,GAAGb,MAAM,CAACQ,KAAK,CAACG,IAAP,CAAN,CAAmBC,MAAnB,CAA0B,aAA1B,CAAnB;AACA,YAAIE,SAAS,GAAGd,MAAM,CAAC,IAAIe,IAAJ,CAASP,KAAK,CAACG,IAAf,CAAD,CAAN,CAA6BK,IAA7B,CAAkChB,MAAM,EAAxC,EAA4C,QAA5C,EAAsD,IAAtD,EAA4DiB,OAA5D,EAAhB;AACF,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADI,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFI,EAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB,aAHI,EAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALI,CADF;AASH,OAbA,CADD,CAJN,CADF;AAyBD;;;;EApC4CnB,S;;SAA1BG,iB","sourcesContent":["import React, { Component } from 'react';\nimport Fetch from '../Fetch/Fetch';\nimport './UpComingEventsTab.css';\nimport moment from 'moment';\n\nexport default class UpComingEventsTab extends Component {\n  state = {\n    events:[]\n  }\n  \n  componentDidMount()  {\n    Fetch(\"/players/id/lastEvents\").then(data => this.setState({events:data}))\n   \n}\n\n  render() {\n    return (\n      <div>\n        \n          <h6 className=\"tabTitle\">Upcoming Events</h6>\n         \n            <div className=\"eventsTab \">\n            {events.map((event, index) => {\n                  let hour = moment(event.date).format('H:HH');\n                  let dateFormated = moment(event.date).format('dddd D MMMM');\n                  let diffMonth = moment(new Date(event.date)).diff(moment(), 'months', true).toFixed();\n                return(\n                  <div>\n              <p>in 3 months</p>\n              <h3>SQUASH</h3>\n              <p>Tuesday 29 January <br />at 20:09</p>\n\n              <li>11 participants</li>\n              </div>\n              )\n            })}\n            </div>\n            \n       \n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}